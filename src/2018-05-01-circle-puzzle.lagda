---
layout: "post"
title: "Circle puzzle"
date: "2018-05-01"
categories: type-theory
---

Moebius type family:

<p class="equation">
$$
\mathsf{rec}_{\mathbb{S}^1}\, \mathcal{U}\, 2\, (\mathsf{ua}(\mathsf{rec}_{2}\,2\,1_{2}\,0_{2})):
\mathbb{S}^1 \to \mathcal{U}.
$$
</p>

<div class="exercise">
Prove the equivalence of

<p class="equation">
$$\sum\,{\mathbb{S}^1}}\,(\mathsf{rec}_{\mathbb{S}^1}\, \mathcal{U}\,  2\, (\mathsf{ua}(\mathsf{rec}_{2}2 1_{2} 0_{2}))) \simeq \mathbb{S}^1.$$
</p>
</div>

To solve this problem, let us recall the following results:

- The univalence axiom: for all $$A : \mathcal{U}$$ and $$B : \mathcal{U}$$,

<p class="equation">
$$
\mathsf{ua} : A\simeq B \to A =_{\mathcal{U}} B.
$$
</p>

- Circle is a higher inductive type generated by
    - a point $$\mathsf{base} : \mathbb{S}^1$$, and
    - a path $$\mathsf{loop} : \mathsf{base} \equiv \mathsf{base}$$
    - In HoTT-Agda:

      \begin{code}
      open import HoTT

      b : SÂ¹
      b = base

      l : base == base
      l = loop
      \end{code}

    - Theorem: $$ \mathsf{loop} \not \equiv \mathsf{refl}_{\mathsf{base}}$$

    - Recursion principle $$\mathsf{rec}$$:

      <p class="equation">
        $$\begin{align*}
        &\mathsf{ref} : (f : \mathbb{S}^1 \to \mathsf{A}) \to (\mathbb{S}^1 \to \mathcal{U})\\
        &\mathsf{ref}~\mathsf{base}~=~f~\mathsf{base}\\
        &\mathsf{ref}~\mathsf{loop}~=~\mathsf{ap}_{f}~\mathsf{loop}
        \end{align*}
        $$
      </p>

- The type for equivalence from $$A$$ to $$B$$

$$
  (A \simeq B) :\equiv \sum\limits_{f : A \to B} \mathsf{isequiv}(f),
$$

where

$$
\mathsf{isequiv(f)} :\equiv
  \left (\sum\limits_{g : B \to A} (f \circ g \sim \mathsf{id}_{B})\right) \times
  \left (\sum\limits_{h : B \to A} (h \circ f \sim \mathsf{id}_{A})\right).
$$

- The homotopy concept:

Let $$f , g : \prod\limits_{(x:A)} P(x)$$ be two sections of a
type family $$P : A \to \mathcal{U}$$. A **homotopy** from $$f$$ to $$g$$
is a dependent function of type

$$
(f \sim g) :\equiv \prod\limits_{x : A} (f(x) \equiv g(x)).
$$


## References

{::options parse_block_html="true" /}
<div class="references">
- {% reference hottbook %}
</div>
{::options parse_block_html="false" /}
